<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs
    title="gCalBirthdays"
    title_url="http://gcalbirthdays.googlecode.com"
    author="Frank Glaser"
    author_email="GlaserFrank@gmail.com">
    <Require feature="dynamic-height"/>
    <Require feature="setprefs"/>
    <OAuth>
      <Service name="gCalBirthdays">
        <Access url="https://www.google.com/accounts/OAuthGetAccessToken" method="GET" />
        <Request url="https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/%20http://www.google.com/calendar/feeds/" method="GET" />
        <Authorization url="https://www.google.com/accounts/OAuthAuthorizeToken?oauth_callback=http://oauth.gmodules.com/gadgets/oauthcallback" />
      </Service>
    </OAuth>
    <UserPref name="test" display_name="Color" default_value="Yellow" datatype="hidden"/>
  </ModulePrefs>
  <Content type="html">
    <![CDATA[

      <!--http://code.google.com/p/gdata-javascript-client/-->
      <!--V1.10-->
      <!--http://www.google.com/uds/modules/gdata/gdata.js-->
      <script type="text/javascript" src="http://www.google.com/jsapi"></script>
      <!--
      <script type="text/javascript" src="http://www.google.com/jsapi?autoload=%7Bmodules%3A%5B%7Bname%3Agdata%2Cversion%3A1.x%2Cpackages%3A%5Bcontacts%2Ccalendar%5D%7D%5D%7D"></script>
      -->

      <!--http://code.google.com/p/gdata-javascript-client/-->
      <!--V1.6.0.3-->
      <!--http://www.prototypejs.org/assets/2009/6/16/prototype.js-->
      <!--http://www.prototypejs.org/assets/2008/9/29/prototype-1.6.0.3.js-->
      <script src="http://ajax.googleapis.com/ajax/libs/prototype/1.6.0.3/prototype.js"></script>

      <!--http://www.bram.us/projects/js_bramus/jsprogressbarhandler/-->
      <!--V0.3.3-->
      <!--http://www.bram.us/demo/projects/jsprogressbarhandler/js/bramus/jsProgressBarHandler.js-->
      <script type="text/javascript" src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/JS/jsProgressBarHandler.js"></script>

      <!--http://phpjs.org/packages/view/396/name:7d67fb58ff9ab58f4d0e4e55221b50e7/-->
      <!--V2.8.6-->
      <!--http://phpjs.org/packages/download/396/name:html_funcs.min.js-->
      <script type="text/javascript" src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/JS/html_funcs.min.js"></script>

      <!--shindig oauth popup handling code-->
      <!--SVN140-->
      <!--http://code.google.com/p/gdata-samples/source/browse/trunk/gadgets/popup.js-->
      <script type="text/javascript" src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/JS/popup.js"></script>

      <!--gCalBirthay Javascript functions for HTML and Gadget Version-->
      <!--V1.10-->
      <script type="text/javascript" src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/JS/gCalBirthdays.js"></script>

      <!--gCalBirthay Gadget specific Javascript functions-->
      <script type="text/javascript">

        //IE JScript 5.6 Compatibility
        // Constants
        var APP_VERSION = '2.038';

        // The gadget containers request that we do NOT run any JS inline.
        // Instead, register a callback handler.
        gadgets.util.registerOnLoadHandler(initGadget);

        function initGadget() {
          // Load the Google data JS Client Library
          //google.load('gdata', '1.x');
          // Save overhead, only load the necessary service
          google.load("gdata", "1.x", {packages: ['contacts', 'calendar']});

          // Tells the google JS lib to call the init function once loaded
          google.setOnLoadCallback(setupGadget);
        }

        function setupGadget(){
          myService = new google.gdata.calendar.CalendarService(APP_NAME);
          myService.useOAuth(APP_NAME);

          setupService();
          useOAuth();

          $('version').innerHTML = /*APP_NAME + ' ' +*/ 'Version: ' + APP_VERSION;
          showOneSection('main');
        };

        function showSettings() {
          showOneSection('busyloader');
          queryGroupsAndCalendars();
        }

        function showGroups(selId){
          // Clear options
          selectClearOptions('groupSelectID');

          // Add all contacts option
          selectAddOption('groupSelectID', ALL_CONTACTS, '');

          // Iterate through the array of contact groups, and add them to
          // drop down box
          // IE JScript 5.6 Compatibility
          var len = groupList.length;
          for (var ie = 0; ie < len; ie++) {
            var group = groupList[ie];
            selectAddOption('groupSelectID', group.title, group.id);
          }

          // Set selection and size
          selectSetSelectedIndex('groupSelectID', selId);
          selectSetSizeOptions('groupSelectID');
        }


        function showCalendars(selId){
          // Clear options
          selectClearOptions('calendarSelectID');

          // Iterate through the array of contact groups, and add them to
          // drop down box
          // IE JScript 5.6 Compatibility
          var len = calendarList.length;
          for (var ie = 0; ie < len; ie++) {
            var calendar = calendarList[ie];
            selectAddOption('calendarSelectID', calendar.title, calendar.url);
          }

          // Add new calendar option
          selectAddOption('calendarSelectID', NEW_CALENDAR, '');

          // Set selection and size
          selectSetSelectedIndex('calendarSelectID', selId);
          selectSetSizeOptions('calendarSelectID');
        }

        function showSettingsBlock(state){
          // Wait for both queries (queryGroups/queryCalendars) finished
          // Both select boxes (groupSelectID/calendarSelectID) are filled
          if ( states.fingroups == state) {
              showSettingsBlock.groups = true;
          }
          if ( states.fincalendars == state) {
              showSettingsBlock.calendars = true;
          }

          if (showSettingsBlock.groups && showSettingsBlock.calendars) {
            showOneSection('settings');
            gadgets.window.adjustHeight( nodeHeight('settings') + nodeHeight('logo') );
          }
        }

        function onclickStart() {
          showOneSection('main');
          fetchData();
        }

        function fetchData() {
          var callback = function(response) {
            if (response.oauthApprovalUrl) {
              printConsole('OAuthApprovalUrl: ' + response.oauthApprovalUrl);
              // TODO: Display "Sign in" link (response.oauthApprovalUrl contains the URL)

              // Create the popup handler. The onOpen function is called when the user
              // opens the popup window. The onClose function is called when the popup
              // window is closed.
              var popup = shindig.oauth.popup({
                destination: response.oauthApprovalUrl,
                windowOptions: 'height=600,width=800,status=no,depent=yes',
                onOpen: function() { showOneSection('waiting'); },
                onClose: function() { fetchData(); }
              });
              // Use the popup handler to attach onclick handlers to UI elements.  The
              // createOpenerOnClick() function returns an onclick handler to open the
              // popup window.  The createApprovedOnClick function returns an onclick
              // handler that will close the popup window and attempt to fetch the user's
              // data again.
              var personalize = $('personalize');
              personalize.onclick = popup.createOpenerOnClick();
              var approvaldone = $('approvaldone');
              approvaldone.onclick = popup.createApprovedOnClick();
              showOneSection('approval');
              gadgets.window.adjustHeight();

            } else if (response.feed) {
              printConsole('Feed');
              // TODO: show results
              showOneSection('main');

              gadgets.window.adjustHeight();

            } else {
              printConsole('Error');
              // TODO: handle the error

              // The response.oauthError and response.oauthErrorText values may help debug
              // problems with your gadget.
              printError('OAuth error: ' + response.oauthError + ': ' + response.oauthErrorText);
            }
          };

          myService.getOwnCalendarsFeed('http://www.google.com/calendar/feeds/default/owncalendars/full', callback, callback);
        }


        // Display UI depending on OAuth access state of the gadget (see <divs> above).
        // If user hasn't approved access to data, provide a "Personalize this gadget" link
        // that contains the oauthApprovalUrl returned from makeRequest.
        //
        // If the user has opened the popup window but hasn't yet approved access, display
        // text prompting the user to confirm that s/he approved access to data.  The user
        // may not ever need to click this link, if the gadget is able to automatically
        // detect when the user has approved access, but showing the link gives users
        // an option to fetch their data even if the automatic detection fails.
        //
        // When the user confirms access, the fetchData() function is invoked again to
        // obtain and display the user's data.
        //
        // Added settings section
        function showOneSection(toshow) {
          var sections = [ 'main', 'approval', 'waiting', 'busyloader', 'settings' ];
          for (var i=0; i < sections.length; ++i) {
            var s = sections[i];
            var el = $(s);
            if (s === toshow) {
              el.style.display = "block";
            } else {
              el.style.display = "none";
            }
          }
          gadgets.window.adjustHeight();
        }

        /**
         * Get the height of an HTMLElement
         * @param {Element} element The element in question.
         * @return {number} The height of that element.
         */
        function nodeHeight(element) {
          var doc = element.ownerDocument;
          if (doc && doc.getBoxObjectFor) {
            var box = doc.getBoxObjectFor(element);
            return box.height;
          } else {
            return element.clientHeight;
          }
        }

      </script>

      <style type="text/css">
        #version {
          font-size: 10px;
          color: green;
        }

        #settings {
          font-size: 80%;
          color: red;
          margin: 5px;
        }

        #settingslink {
          cursor: pointer;
          font-size: 10px;
          text-decoration: underline;
          color: blue;
          float: right;
          padding: 0 3px 3px 0;
        }
      </style>

      <img id='logo' src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/Gadget/gCalBirthdays.gif" alt="gCalBirthdays Logo"/>


      <div id="main" style="display:none">
        <span id="version">Version</span>
        <input id="startButtonID" type="button" value="Go" onclick="onclickStart()">
        <span id="settingslink" onclick="showSettings()">settings</span>
      </div>

      <div id="approval" style="display:none">
        <img src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/Images/popup.gif">
        <a href="#" id="personalize">Login</a>
      </div>

      <div id="waiting" style="display:none">
        Please click
        <a href="#" id="approvaldone">I've approved access</a>
        once you've approved access to your data.
      </div>

      <div id="busyloader" style="display:none">
        <img src="http://gcalbirthdays.googlecode.com/svn/trunk/gCalBirthdays/Images/busyLoader.gif" alt="BusyLoader Image">
      </div>

      <div id="settings" style="display:none">
        <table>
          <tr>
            <td>Select Group(s):</td>
          </tr>
          <tr>
            <td>
              <select id="groupSelectID" multiple="multiple" size="4"></select>
            </td>
          </tr>
          <tr>
            <td>Select Calendar:</td>
          </tr>
          <tr>
            <td>
              <select id="calendarSelectID" size="1" onchange="onChangeCalendarSelect()"></select>
            </td>
          </tr>
        </table>
        <br>
        <input id="startButtonID" type="button" value="Go" onclick="onclickStart()">
        <input id="stopButtonID" type="button" value="Cancel" onclick="onclickStop()" disabled="true">
        <br>
      </div>

      <!--Google Analytics-->
      <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
      </script>
      <script type="text/javascript">
        try {
          var pageTracker = _gat._getTracker("UA-9798979-1");
          pageTracker._trackPageview();
        }
        catch(err) {}
      </script>

    ]]>
  </Content>
</Module>
